{"ast":null,"code":"import { PARTNERS } from \"../shared/partners\";\nimport * as ActionTypes from './ActionTypes';\nexport const Partners = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    errMess: null,\n    partners: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_PARTNERS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        partners: action.payload\n      };\n\n    case ActionTypes.PARTNERS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        partners: []\n      };\n\n    case ActionTypes.PARTNERS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Partners;\n\nvar _c;\n\n$RefreshReg$(_c, \"Partners\");","map":{"version":3,"sources":["/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js"],"names":["PARTNERS","ActionTypes","Partners","state","isLoading","errMess","partners","action","type","ADD_PARTNERS","payload","PARTNERS_LOADING","PARTNERS_FAILED"],"mappings":"AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAIV;AAAA,MAJWC,KAIX,uEAJmB;AAC7BC,IAAAA,SAAS,EAAE,IADkB;AAE7BC,IAAAA,OAAO,EAAE,IAFoB;AAG7BC,IAAAA,QAAQ,EAAE;AAHmB,GAInB;AAAA,MAAXC,MAAW;;AACd,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAW,CAACQ,YAAjB;AACI,aAAO,EAAC,GAAGN,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,QAAQ,EAAEC,MAAM,CAACG;AAA7D,OAAP;;AACJ,SAAKT,WAAW,CAACU,gBAAjB;AACI,aAAO,EAAC,GAAGR,KAAJ;AAAWC,QAAAA,SAAS,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,IAArC;AAA2CC,QAAAA,QAAQ,EAAE;AAArD,OAAP;;AACJ,SAAKL,WAAW,CAACW,eAAjB;AACI,aAAO,EAAC,GAAGT,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAEE,MAAM,CAACG;AAA7C,OAAP;;AACJ;AACI,aAAOP,KAAP;AARR;AAUC,CAfM;KAAMD,Q","sourcesContent":["import { PARTNERS } from \"../shared/partners\";\nimport * as ActionTypes from './ActionTypes';\n\nexport const Partners = (state = {\n    isLoading: true,\n    errMess: null,\n    partners: []\n}, action) => {\nswitch (action.type) {\n    case ActionTypes.ADD_PARTNERS:\n        return {...state, isLoading: false, errMess: null, partners: action.payload};\n    case ActionTypes.PARTNERS_LOADING:\n        return {...state, isLoading: true, errMess: null, partners: []};\n    case ActionTypes.PARTNERS_FAILED:\n        return {...state, isLoading: false, errMess: action.payload};\n    default:\n        return state;\n}\n};\n\n"]},"metadata":{},"sourceType":"module"}