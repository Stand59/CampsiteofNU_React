{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { CAMPSITES } from '../shared/campsites';\nimport { PARTNERS } from '../shared/partners';\nimport { baseUrl } from '../shared/baseUrl';\nexport const fetchCampsites = () => dispatch => {\n  dispatch(campsitesLoading());\n  return fetch(baseUrl + 'campsites').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(campsites => dispatch(addCampsites(campsites))).catch(error => dispatch(campsitesFailed(error.message)));\n};\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const fetchPromotions = () => dispatch => {\n  dispatch(promotionsLoading());\n  return fetch(baseUrl + 'promotions').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(promotions => dispatch(addPromotions(promotions))).catch(error => dispatch(promotionsFailed(error.message)));\n};\nexport const commentsFailed = errMess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errMess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\nexport const postFeedback = (firstName, lastName, phoneNum, email, agree, contactType, feedback) => dispatch => {\n  const myFeedback = {\n    firstName: firstName,\n    lastName: lastName,\n    phoneNum: phoneNum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    feedback: feedback\n  };\n  return fetch(baseUrl + 'feedback', {\n    method: \"Post\",\n    body: JSON.stringify(myFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (response.ok) {\n      alert('Thank you for your feedback' + {\n        cddddmyFeedback\n      });\n      console.log('Current State is: ');\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  });\n};\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\n  const newComment = {\n    campsiteId: campsiteId,\n    rating: rating,\n    author: author,\n    text: text\n  };\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + 'comments', {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log('post comment', error.message);\n    alert('Your comment could not be posted\\nError: ' + error.message);\n  });\n};\nexport const promotionsLoading = () => ({\n  type: ActionTypes.PROMOTIONS_LOADING\n});\nexport const promotionsFailed = errMess => ({\n  type: ActionTypes.PROMOTIONS_FAILED,\n  payload: errMess\n});\nexport const addPromotions = promotions => ({\n  type: ActionTypes.ADD_PROMOTIONS,\n  payload: promotions\n});\nexport const fetchPartners = () => dispatch => {\n  dispatch(partnersLoading());\n  setTimeout(() => {\n    dispatch(addPartners(PARTNERS));\n  }, 2000);\n};\nexport const campsitesLoading = () => ({\n  type: ActionTypes.CAMPSITES_LOADING\n});\nexport const campsitesFailed = errMess => ({\n  type: ActionTypes.CAMPSITES_FAILED,\n  payload: errMess\n});\nexport const addCampsites = campsites => ({\n  type: ActionTypes.ADD_CAMPSITES,\n  payload: campsites\n});\nexport const partnersLoading = () => ({\n  type: ActionTypes.PARTNERS_LOADING\n});\nexport const partnersFailed = errMess => ({\n  type: ActionTypes.PARTNERS_FAILED,\n  payload: errMess\n});\nexport const addPartners = campsites => ({\n  type: ActionTypes.ADD_PARTNERS,\n  payload: campsites\n});","map":{"version":3,"sources":["/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js"],"names":["ActionTypes","CAMPSITES","PARTNERS","baseUrl","fetchCampsites","dispatch","campsitesLoading","fetch","then","response","ok","error","Error","status","statusText","errMess","message","json","campsites","addCampsites","catch","campsitesFailed","fetchComments","comments","addComments","commentsFailed","fetchPromotions","promotionsLoading","promotions","addPromotions","promotionsFailed","type","COMMENTS_FAILED","payload","ADD_COMMENTS","addComment","comment","ADD_COMMENT","postFeedback","firstName","lastName","phoneNum","email","agree","contactType","feedback","myFeedback","method","body","JSON","stringify","headers","alert","cddddmyFeedback","console","log","postComment","campsiteId","rating","author","text","newComment","date","Date","toISOString","PROMOTIONS_LOADING","PROMOTIONS_FAILED","ADD_PROMOTIONS","fetchPartners","partnersLoading","setTimeout","addPartners","CAMPSITES_LOADING","CAMPSITES_FAILED","ADD_CAMPSITES","PARTNERS_LOADING","partnersFailed","PARTNERS_FAILED","ADD_PARTNERS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAMC,QAAQ,IAAI;AAC5CA,EAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;AAEA,SAAOC,KAAK,CAACJ,OAAO,GAAG,WAAX,CAAL,CACFK,IADE,CACGC,QAAQ,IAAI;AACV,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,aAAOD,QAAP;AACH,KAFD,MAEO;AACH,YAAME,KAAK,GAAG,IAAIC,KAAJ,CAAW,SAAQH,QAAQ,CAACI,MAAO,KAAIJ,QAAQ,CAACK,UAAW,EAA3D,CAAd;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACH;AACJ,GATF,EAUCA,KAAK,IAAI;AACL,UAAMI,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAhB;AACA,UAAMD,OAAN;AACH,GAbF,EAeFP,IAfE,CAeGC,QAAQ,IAAIA,QAAQ,CAACQ,IAAT,EAff,EAgBFT,IAhBE,CAgBGU,SAAS,IAAIb,QAAQ,CAACc,YAAY,CAACD,SAAD,CAAb,CAhBxB,EAiBFE,KAjBE,CAiBIT,KAAK,IAAIN,QAAQ,CAACgB,eAAe,CAACV,KAAK,CAACK,OAAP,CAAhB,CAjBrB,CAAP;AAkBH,CArBM;AAuBP,OAAO,MAAMM,aAAa,GAAG,MAAMjB,QAAQ,IAAI;AAC3C,SAAOE,KAAK,CAACJ,OAAO,GAAG,UAAX,CAAL,CACFK,IADE,CACGC,QAAQ,IAAI;AACV,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,aAAOD,QAAP;AACH,KAFD,MAEO;AACH,YAAME,KAAK,GAAG,IAAIC,KAAJ,CAAW,SAAQH,QAAQ,CAACI,MAAO,KAAIJ,QAAQ,CAACK,UAAW,EAA3D,CAAd;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACH;AACJ,GATF,EAUCA,KAAK,IAAI;AACL,UAAMI,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAhB;AACA,UAAMD,OAAN;AACH,GAbF,EAeFP,IAfE,CAeGC,QAAQ,IAAIA,QAAQ,CAACQ,IAAT,EAff,EAgBFT,IAhBE,CAgBGe,QAAQ,IAAIlB,QAAQ,CAACmB,WAAW,CAACD,QAAD,CAAZ,CAhBvB,EAiBFH,KAjBE,CAiBIT,KAAK,IAAIN,QAAQ,CAACoB,cAAc,CAACd,KAAK,CAACK,OAAP,CAAf,CAjBrB,CAAP;AAkBH,CAnBM;AAqBP,OAAO,MAAMU,eAAe,GAAG,MAAMrB,QAAQ,IAAI;AAC7CA,EAAAA,QAAQ,CAACsB,iBAAiB,EAAlB,CAAR;AAEA,SAAOpB,KAAK,CAACJ,OAAO,GAAG,YAAX,CAAL,CACFK,IADE,CACGC,QAAQ,IAAI;AACV,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,aAAOD,QAAP;AACH,KAFD,MAEO;AACH,YAAME,KAAK,GAAG,IAAIC,KAAJ,CAAW,SAAQH,QAAQ,CAACI,MAAO,KAAIJ,QAAQ,CAACK,UAAW,EAA3D,CAAd;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACH;AACJ,GATF,EAUCA,KAAK,IAAI;AACL,UAAMI,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAhB;AACA,UAAMD,OAAN;AACH,GAbF,EAeFP,IAfE,CAeGC,QAAQ,IAAIA,QAAQ,CAACQ,IAAT,EAff,EAgBFT,IAhBE,CAgBGoB,UAAU,IAAIvB,QAAQ,CAACwB,aAAa,CAACD,UAAD,CAAd,CAhBzB,EAiBFR,KAjBE,CAiBIT,KAAK,IAAIN,QAAQ,CAACyB,gBAAgB,CAACnB,KAAK,CAACK,OAAP,CAAjB,CAjBrB,CAAP;AAkBH,CArBM;AAuBP,OAAO,MAAMS,cAAc,GAAGV,OAAO,KAAK;AACtCgB,EAAAA,IAAI,EAAE/B,WAAW,CAACgC,eADoB;AAEtCC,EAAAA,OAAO,EAAElB;AAF6B,CAAL,CAA9B;AAKP,OAAO,MAAMS,WAAW,GAAGD,QAAQ,KAAK;AACpCQ,EAAAA,IAAI,EAAE/B,WAAW,CAACkC,YADkB;AAEpCD,EAAAA,OAAO,EAAEV;AAF2B,CAAL,CAA5B;AAKP,OAAO,MAAMY,UAAU,GAAGC,OAAO,KAAK;AAClCL,EAAAA,IAAI,EAAE/B,WAAW,CAACqC,WADgB;AAElCJ,EAAAA,OAAO,EAAEG;AAFyB,CAAL,CAA1B;AAKP,OAAO,MAAME,YAAY,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuCC,KAAvC,EAA8CC,WAA9C,EAA2DC,QAA3D,KAAwExC,QAAQ,IAAI;AAE5G,QAAMyC,UAAU,GAAE;AACdP,IAAAA,SAAS,EAAEA,SADG;AAEdC,IAAAA,QAAQ,EAAEA,QAFI;AAGdC,IAAAA,QAAQ,EAAEA,QAHI;AAIdC,IAAAA,KAAK,EAAEA,KAJO;AAKdC,IAAAA,KAAK,EAAEA,KALO;AAMdC,IAAAA,WAAW,EAAEA,WANC;AAOdC,IAAAA,QAAQ,EAAEA;AAPI,GAAlB;AAUA,SAAOtC,KAAK,CAACJ,OAAO,GAAG,UAAX,EAAuB;AAC/B4C,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,UAAf,CAFyB;AAG/BK,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHsB,GAAvB,CAAL,CAON3C,IAPM,CAODC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb0C,MAAAA,KAAK,CAAC,gCAAgC;AAACC,QAAAA;AAAD,OAAjC,CAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,KAHD,MAGO;AACH,YAAM5C,KAAK,GAAG,IAAIC,KAAJ,CAAW,SAAQH,QAAQ,CAACI,MAAO,KAAIJ,QAAQ,CAACK,UAAW,EAA3D,CAAd;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACH;AACJ,GAhBM,EAiBPA,KAAK,IAAI;AAAE,UAAMA,KAAN;AAAc,GAjBlB,CAAP;AAoBH,CAhCM;AAiCP,OAAO,MAAM6C,WAAW,GAAG,CAACC,UAAD,EAAaC,MAAb,EAAqBC,MAArB,EAA6BC,IAA7B,KAAsCvD,QAAQ,IAAI;AAEzE,QAAMwD,UAAU,GAAG;AACfJ,IAAAA,UAAU,EAAEA,UADG;AAEfC,IAAAA,MAAM,EAAEA,MAFO;AAGfC,IAAAA,MAAM,EAAEA,MAHO;AAIfC,IAAAA,IAAI,EAAEA;AAJS,GAAnB;AAMAC,EAAAA,UAAU,CAACC,IAAX,GAAkB,IAAIC,IAAJ,GAAWC,WAAX,EAAlB;AAEA,SAAOzD,KAAK,CAACJ,OAAO,GAAG,UAAX,EAAuB;AAC3B4C,IAAAA,MAAM,EAAE,MADmB;AAE3BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,UAAf,CAFqB;AAG3BV,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHkB,GAAvB,CAAL,CAOF3C,IAPE,CAOGC,QAAQ,IAAI;AACV,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,aAAOD,QAAP;AACH,KAFD,MAEO;AACH,YAAME,KAAK,GAAG,IAAIC,KAAJ,CAAW,SAAQH,QAAQ,CAACI,MAAO,KAAIJ,QAAQ,CAACK,UAAW,EAA3D,CAAd;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACH;AACJ,GAfF,EAgBCA,KAAK,IAAI;AAAE,UAAMA,KAAN;AAAc,GAhB1B,EAkBFH,IAlBE,CAkBGC,QAAQ,IAAIA,QAAQ,CAACQ,IAAT,EAlBf,EAmBFT,IAnBE,CAmBGC,QAAQ,IAAIJ,QAAQ,CAAC8B,UAAU,CAAC1B,QAAD,CAAX,CAnBvB,EAoBFW,KApBE,CAoBIT,KAAK,IAAI;AACZ2C,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B5C,KAAK,CAACK,OAAlC;AACAoC,IAAAA,KAAK,CAAC,8CAA8CzC,KAAK,CAACK,OAArD,CAAL;AACH,GAvBE,CAAP;AAwBH,CAlCM;AAoCP,OAAO,MAAMW,iBAAiB,GAAG,OAAO;AACpCI,EAAAA,IAAI,EAAE/B,WAAW,CAACiE;AADkB,CAAP,CAA1B;AAIP,OAAO,MAAMnC,gBAAgB,GAAGf,OAAO,KAAK;AACxCgB,EAAAA,IAAI,EAAE/B,WAAW,CAACkE,iBADsB;AAExCjC,EAAAA,OAAO,EAAElB;AAF+B,CAAL,CAAhC;AAKP,OAAO,MAAMc,aAAa,GAAGD,UAAU,KAAK;AACxCG,EAAAA,IAAI,EAAE/B,WAAW,CAACmE,cADsB;AAExClC,EAAAA,OAAO,EAAEL;AAF+B,CAAL,CAAhC;AAKP,OAAO,MAAMwC,aAAa,GAAG,MAAM/D,QAAQ,IAAI;AAE3CA,EAAAA,QAAQ,CAACgE,eAAe,EAAhB,CAAR;AAEAC,EAAAA,UAAU,CAAC,MAAM;AACbjE,IAAAA,QAAQ,CAACkE,WAAW,CAACrE,QAAD,CAAZ,CAAR;AACH,GAFS,EAEP,IAFO,CAAV;AAGH,CAPM;AASP,OAAO,MAAMI,gBAAgB,GAAG,OAAO;AACnCyB,EAAAA,IAAI,EAAE/B,WAAW,CAACwE;AADiB,CAAP,CAAzB;AAIP,OAAO,MAAMnD,eAAe,GAAGN,OAAO,KAAK;AACvCgB,EAAAA,IAAI,EAAE/B,WAAW,CAACyE,gBADqB;AAEvCxC,EAAAA,OAAO,EAAElB;AAF8B,CAAL,CAA/B;AAKP,OAAO,MAAMI,YAAY,GAAGD,SAAS,KAAK;AACtCa,EAAAA,IAAI,EAAE/B,WAAW,CAAC0E,aADoB;AAEtCzC,EAAAA,OAAO,EAAEf;AAF6B,CAAL,CAA9B;AAKP,OAAO,MAAMmD,eAAe,GAAG,OAAO;AAClCtC,EAAAA,IAAI,EAAE/B,WAAW,CAAC2E;AADgB,CAAP,CAAxB;AAIP,OAAO,MAAMC,cAAc,GAAG7D,OAAO,KAAK;AACtCgB,EAAAA,IAAI,EAAE/B,WAAW,CAAC6E,eADoB;AAEtC5C,EAAAA,OAAO,EAAElB;AAF6B,CAAL,CAA9B;AAKP,OAAO,MAAMwD,WAAW,GAAGrD,SAAS,KAAK;AACrCa,EAAAA,IAAI,EAAE/B,WAAW,CAAC8E,YADmB;AAErC7C,EAAAA,OAAO,EAAEf;AAF4B,CAAL,CAA7B","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport { CAMPSITES } from '../shared/campsites';\nimport { PARTNERS } from '../shared/partners';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const fetchCampsites = () => dispatch => {\n    dispatch(campsitesLoading());\n\n    return fetch(baseUrl + 'campsites')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(campsites => dispatch(addCampsites(campsites)))\n        .catch(error => dispatch(campsitesFailed(error.message)));\n};\n\nexport const fetchComments = () => dispatch => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const fetchPromotions = () => dispatch => {\n    dispatch(promotionsLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)))\n        .catch(error => dispatch(promotionsFailed(error.message)));\n};\n\nexport const commentsFailed = errMess => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addComment = comment => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postFeedback = (firstName, lastName, phoneNum, email, agree, contactType, feedback) => dispatch => {\n\n    const myFeedback ={\n        firstName: firstName,\n        lastName: lastName,\n        phoneNum: phoneNum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        feedback: feedback,\n    };\n\n    return fetch(baseUrl + 'feedback', {\n        method: \"Post\",\n        body: JSON.stringify(myFeedback),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n    .then(response => {\n        if (response.ok) {\n            alert('Thank you for your feedback' + {cddddmyFeedback});\n            console.log('Current State is: ');\n        } else {\n            const error = new Error(`Error ${response.status}: ${response.statusText}`);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => { throw error; }\n)\n\n}\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\n    \n    const newComment = {\n        campsiteId: campsiteId,\n        rating: rating,\n        author: author,\n        text: text\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n            method: \"POST\",\n            body: JSON.stringify(newComment),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => { throw error; }\n        )\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            console.log('post comment', error.message);\n            alert('Your comment could not be posted\\nError: ' + error.message);\n        });\n};\n\nexport const promotionsLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n});\n\nexport const promotionsFailed = errMess => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n});\n\nexport const addPromotions = promotions => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions\n});\n\nexport const fetchPartners = () => dispatch => {\n\n    dispatch(partnersLoading());\n\n    setTimeout(() => {\n        dispatch(addPartners(PARTNERS));\n    }, 2000);\n};\n\nexport const campsitesLoading = () => ({\n    type: ActionTypes.CAMPSITES_LOADING\n});\n\nexport const campsitesFailed = errMess => ({\n    type: ActionTypes.CAMPSITES_FAILED,\n    payload: errMess\n});\n\nexport const addCampsites = campsites => ({\n    type: ActionTypes.ADD_CAMPSITES,\n    payload: campsites\n});\n\nexport const partnersLoading = () => ({\n    type: ActionTypes.PARTNERS_LOADING\n});\n\nexport const partnersFailed = errMess => ({\n    type: ActionTypes.PARTNERS_FAILED,\n    payload: errMess\n});\n\nexport const addPartners = campsites => ({\n    type: ActionTypes.ADD_PARTNERS,\n    payload: campsites\n});"]},"metadata":{},"sourceType":"module"}