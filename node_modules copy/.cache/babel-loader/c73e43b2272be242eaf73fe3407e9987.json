{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Campsites = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    errMess: null,\n    campsites: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_CAMPSITES:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        campsites: action.payload\n      };\n\n    case ActionTypes.CAMPSITES_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        campsites: []\n      };\n\n    case ActionTypes.CAMPSITES_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Campsites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Campsites\");","map":{"version":3,"sources":["/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js"],"names":["ActionTypes","Campsites","state","isLoading","errMess","campsites","action","type","ADD_CAMPSITES","payload","CAMPSITES_LOADING","CAMPSITES_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,YAIP;AAAA,MAJQC,KAIR,uEAJgB;AAC1BC,IAAAA,SAAS,EAAE,IADe;AAE1BC,IAAAA,OAAO,EAAE,IAFiB;AAG1BC,IAAAA,SAAS,EAAE;AAHe,GAIhB;AAAA,MAAXC,MAAW;;AACV,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKP,WAAW,CAACQ,aAAjB;AACI,aAAO,EAAC,GAAGN,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,SAAS,EAAEC,MAAM,CAACG;AAA9D,OAAP;;AACJ,SAAKT,WAAW,CAACU,iBAAjB;AACI,aAAO,EAAC,GAAGR,KAAJ;AAAWC,QAAAA,SAAS,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,IAArC;AAA2CC,QAAAA,SAAS,EAAE;AAAtD,OAAP;;AACJ,SAAKL,WAAW,CAACW,gBAAjB;AACI,aAAO,EAAC,GAAGT,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAEE,MAAM,CAACG;AAA7C,OAAP;;AACJ;AACI,aAAOP,KAAP;AARJ;AAUP,CAfM;KAAMD,S","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const Campsites = (state = {\n        isLoading: true,\n        errMess: null,\n        campsites: []\n    }, action) => {\n        switch (action.type) {\n        case ActionTypes.ADD_CAMPSITES:\n            return {...state, isLoading: false, errMess: null, campsites: action.payload};\n        case ActionTypes.CAMPSITES_LOADING:\n            return {...state, isLoading: true, errMess: null, campsites: []};\n        case ActionTypes.CAMPSITES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n        default:\n            return state;\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}