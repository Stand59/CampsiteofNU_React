[{"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"2","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"3","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponents.js":"4","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"12","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"17","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"18","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"19","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"20","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"21","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"22","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"23","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"24","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":696,"mtime":1645657859092,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1639426932596,"results":"28","hashOfConfig":"27"},{"size":552,"mtime":1641491987060,"results":"29","hashOfConfig":"27"},{"size":2059,"mtime":1642102704747,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1643135811218,"results":"31","hashOfConfig":"27"},{"size":8199,"mtime":1642190093033,"results":"32","hashOfConfig":"27"},{"size":4000,"mtime":1642441069549,"results":"33","hashOfConfig":"27"},{"size":4867,"mtime":1641489254417,"results":"34","hashOfConfig":"27"},{"size":1915,"mtime":1641098630340,"results":"35","hashOfConfig":"27"},{"size":1940,"mtime":1642437419877,"results":"36","hashOfConfig":"27"},{"size":11050,"mtime":1642189204756,"results":"37","hashOfConfig":"27"},{"size":4243,"mtime":1641226535506,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1643135811218,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1641226554620,"results":"40","hashOfConfig":"27"},{"size":4732,"mtime":1643134126065,"results":"41","hashOfConfig":"27"},{"size":792,"mtime":1642018100703,"results":"42","hashOfConfig":"27"},{"size":567,"mtime":1642016111077,"results":"43","hashOfConfig":"27"},{"size":570,"mtime":1645658001919,"results":"44","hashOfConfig":"27"},{"size":682,"mtime":1645657991235,"results":"45","hashOfConfig":"27"},{"size":561,"mtime":1645657959093,"results":"46","hashOfConfig":"27"},{"size":5888,"mtime":1645658014200,"results":"47","hashOfConfig":"27"},{"size":594,"mtime":1642101269981,"results":"48","hashOfConfig":"27"},{"size":234,"mtime":1642016185881,"results":"49","hashOfConfig":"27"},{"size":166,"mtime":1642019221434,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1642102719486,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7tl0nv",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],["107","108"],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponents.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["109","110","111","112","113","114","115","116","117","118","119","120"],"import React, {Component} from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, outline, Modal, ModalHeader, ModalBody,\n    Form, FormGroup, Input, Label, Row, Col } from 'reactstrap'\nimport { Link, NavLink } from 'react-router-dom';\nimport { Control, LocalForm, Errors} from 'react-redux-form';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nimport '../App.css';\nimport { Loading } from './LoadingComponent';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rating: '1',\n            author: '',\n            text: '',\n            touched: {\n                rating: false,\n                author: false,\n                text: false\n            }\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n    \n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button outline className=\"fa-lg\"  onClick={this.toggleModal}>\n                    <i className=\"fa fa-pencil fa-lg\"/> Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                    <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <div clasName=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"className=\"custom-select\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </div>\n                            <div clasName=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                    <Control.text className=\"form-control\" model=\".author\" name=\"author\" name=\"author\" \n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                            </div>\n                            <div clasName=\"form-group\">\n                                <Label htmlFor=\"text\">Comment</Label>\n                                <Control.textarea model=\".text\" id=\"text\" name=\"text\" className=\"form-control\" rows=\"6\"></Control.textarea>\n                            </div>\n                            <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                            </Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n          </React.Fragment>\n        );\n    }\n}\n\n\nfunction RenderCampsite({campsite}){\n    return (\n        <div className=\"col-md-5 m-1\">\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n                    <CardBody>\n                        <CardText>{campsite.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        </div>\n    );\n}\n\nfunction RenderComments({comments, postComment, campsiteId}) {\n    if(comments){\n        return(\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                <Stagger in>\n                    {\n                        comments.map(comment => {\n                            return (\n                                <Fade in key={comment.id}>\n                                    <div>\n                                        <p>\n                                            {comment.text}<br />\n                                            -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\n                                        </p>\n                                    </div>\n                                </Fade>\n                            );\n                        })\n                    }\n                </Stagger>\n                {comments.map((comments) => \n                <div className=\"m-3\">\"{comments.text}\" <br></br> -- {comments.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comments.date)))}  </div>)\n                }\n                <CommentForm campsiteId={campsiteId} postComment={postComment} />\n            </div>\n        );\n    }\n}\n\n\nfunction CampsiteInfo(props) {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    if (props.campsite) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem><Link active>{props.campsite.name}</Link></BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite}/>\n                    <RenderComments\n                        comments={props.comments}\n                        postComment={props.postComment}\n                        campsiteId={props.campsite.id}\n                    />   \n                </div>\n            </div>\n        );\n    }\n    return <div />;\n}\n\n\n\nexport default CampsiteInfo;","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",["121"],"import React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport Directory from './DirectoryComponents';\nimport CampsiteInfo from './CampsiteInfoComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport { postComment, postFeedback, fetchCampsites, fetchComments, fetchPromotions, addComment, fetchPartners } from '../redux/ActionCreators';\n\nconst mapStateToProps = state => {\n  return {\n    campsites: state.campsites,\n    comments: state.comments,\n    partners: state.partners,\n    promotions: state.promotions,\n  };\n};\n\nconst mapDispatchToProps = {\n  addComment: (campsiteId, rating, author, text) => (addComment(campsiteId, rating, author, text)),\n  fetchCampsites: () => (fetchCampsites()),\n  resetFeedbackForm: () => (actions.reset('feedbackForm')),\n  fetchComments: () => (fetchComments()),\n  fetchPromotions: () => (fetchPromotions()),\n  fetchPartners: () => (fetchPartners()),\n  postComment: (campsiteId, rating, author, text) => (postComment(campsiteId, rating, author, text)),\n  postFeedback: (firstname, lastname, phoneNum, email, agree, contactType, feedback) => (postFeedback(firstname, lastname, phoneNum, email, agree, contactType, feedback)),\n};\n\nclass Main extends Component {\n\n  componentDidMount() {\n    this.props.fetchCampsites();\n    this.props.fetchComments();\n    this.props.fetchPromotions();\n    this.props.fetchPartners();\n}\n\nrender() {\n\n  const HomePage = () => {\n      return (\n        <Home\n            campsite={this.props.campsites.campsites.filter(campsite => campsite.featured)[0]}\n            campsitesLoading={this.props.campsites.isLoading}\n            campsitesErrMess={this.props.campsites.errMess}\n            promotion={this.props.promotions.promotions.filter(promotion => promotion.featured)[0]}\n            promotionLoading={this.props.promotions.isLoading}\n            promotionErrMess={this.props.promotions.errMess}\n            partner={this.props.partners.partners.filter(partner => partner.featured)[0]}\n        />\n      );\n  }\n    const AboutPage = () => {\n      return (\n        <About\n          partners={this.props.partners}\n        />\n      );\n    };\n\n    const CampsiteWithId = ({match}) => {\n      return (\n        <CampsiteInfo \n          campsite={this.props.campsites.campsites.filter(campsite => campsite.id === +match.params.campsiteId)[0]}\n          isLoading={this.props.campsites.isLoading}\n          errMess={this.props.campsites.errMess}\n          comments={this.props.comments.comments.filter(comment => comment.campsiteId === +match.params.campsiteId)}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n        />\n      );\n  };\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                <Switch>\n                    <Route path='/home' component={HomePage} />\n                    <Route exact path='/directory' render={() => <Directory campsites={this.props.campsites} />} />\n                    <Route path='/directory/:campsiteId' component={CampsiteWithId} />\n                    <Route exact path='/contactus' render={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} /> } />\n                    <Route exact path='/aboutus' render={() => <About partners={this.props.partners} /> } />\n                    <Redirect to='/home' />\n                </Switch>\n            </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["122","123","124","125","126","127","128"],"import React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap'\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values) {\n        this.props.resetFeedbackForm();\n        this.props.postFeedback(this.props.firstName, values.lastName, values.phoneNum, values.email, values.agree, values.contactType, values.feedback);\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem><Link active>Contact Us</Link></BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                            placeholder=\"First Name\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, \n                                                minLength: minLength(2),\n                                                maxLength: maxLength(15)\n                                            }}\n                                        />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default Contact;","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",["129"],"import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction PartnerList (props) {\n    \n    const partners = props.partners.partners.map(partner => {\n        return (\n            <Fade in key={partner.id}>\n                <Media tag=\"li\" key={partner.id}>\n                    <RenderPartner partner={partner}/>\n                </Media>\n            </Fade>\n        );\n    });\n    \n    if (props.partners.isLoading) {\n        return <Loading />;\n    }\n    if (props.partners.errMess) {\n        return <h4>{props.partners.errMess}</h4>;\n    }\n    return (\n        <div className=\"col mt-4\">\n            <Media list>\n            <Stagger in>{partners}</Stagger>\n            </Media>\n        </div>\n    )\n}\n\n\nfunction RenderPartner ({partner}) {\n        if (partner) {\n            return (\n                <React.Fragment>\n                    <Media object src={baseUrl + partner.image} alt={partner.name} width=\"150\" />\n                    <Media body className=\"ml-5 mb-4\">\n                        <Media heading>\n                            {partner.name}\n                        </Media>\n                        {partner.description}\n                    </Media>\n                </React.Fragment>\n            ); \n            return (\n                <div></div>\n            );\n        }\n    }\n\nfunction About(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>About Us</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-sm-6\">\n                    <h3>Our Mission</h3>\n                    <p>We present a curated database of the best campsites in the vast woods and backcountry of the World Wide Web Wilderness. We increase access to adventure for the public while promoting safe and respectful use of resources. The expert wilderness trekkers on our staff personally verify each campsite to make sure that they are up to our standards. We also present a platform for campers to share reviews on campsites they have visited with each other.</p>\n                </div>\n                <div className=\"col-sm-6\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\"><h3>Facts At a Glance</h3></CardHeader>\n                        <CardBody>\n                            <dl className=\"row\">\n                                <dt className=\"col-6\">Founded</dt>\n                                <dd className=\"col-6\">February 3, 2016</dd>\n                                <dt className=\"col-6\">No. of Campsites in 2019</dt>\n                                <dd className=\"col-6\">563</dd>\n                                <dt className=\"col-6\">No. of Reviews in 2019</dt>\n                                <dd className=\"col-6\">4388</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">42</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col\">\n                    <Card className=\"bg-light mt-3\">\n                        <CardBody>\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">I will not follow where the path may lead, but I will go where there is no path, and I will leave a trail.</p>\n                                <footer className=\"blockquote-footer\">Muriel Strode,{' '}\n                                    <cite title=\"Source Title\">\"Wind-Wafted Wild Flowers\" -\n                                    The Open Court, 1903</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3>Community Partners</h3>\n                </div>\n                <div>\n                    <PartnerList partners={props.partners}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default About;","/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/Users/nathan/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":2,"column":45,"nodeType":"136","messageId":"137","endLine":2,"endColumn":54},{"ruleId":"134","severity":1,"message":"138","line":2,"column":92,"nodeType":"136","messageId":"137","endLine":2,"endColumn":99},{"ruleId":"134","severity":1,"message":"139","line":3,"column":5,"nodeType":"136","messageId":"137","endLine":3,"endColumn":9},{"ruleId":"134","severity":1,"message":"140","line":3,"column":11,"nodeType":"136","messageId":"137","endLine":3,"endColumn":20},{"ruleId":"134","severity":1,"message":"141","line":3,"column":22,"nodeType":"136","messageId":"137","endLine":3,"endColumn":27},{"ruleId":"134","severity":1,"message":"142","line":3,"column":36,"nodeType":"136","messageId":"137","endLine":3,"endColumn":39},{"ruleId":"134","severity":1,"message":"143","line":3,"column":41,"nodeType":"136","messageId":"137","endLine":3,"endColumn":44},{"ruleId":"134","severity":1,"message":"144","line":4,"column":16,"nodeType":"136","messageId":"137","endLine":4,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":73,"column":33,"nodeType":"147","messageId":"148","endLine":73,"endColumn":116},{"ruleId":"145","severity":1,"message":"149","line":83,"column":37,"nodeType":"147","messageId":"148","endLine":89,"endColumn":39},{"ruleId":"150","severity":1,"message":"151","line":83,"column":106,"nodeType":"152","messageId":"153","endLine":83,"endColumn":119},{"ruleId":"145","severity":1,"message":"154","line":104,"column":33,"nodeType":"147","messageId":"148","endLine":104,"endColumn":121},{"ruleId":"134","severity":1,"message":"155","line":60,"column":11,"nodeType":"136","messageId":"137","endLine":60,"endColumn":20},{"ruleId":"145","severity":1,"message":"149","line":81,"column":37,"nodeType":"147","messageId":"148","endLine":89,"endColumn":43},{"ruleId":"145","severity":1,"message":"149","line":106,"column":37,"nodeType":"147","messageId":"148","endLine":114,"endColumn":39},{"ruleId":"145","severity":1,"message":"149","line":131,"column":37,"nodeType":"147","messageId":"148","endLine":140,"endColumn":39},{"ruleId":"145","severity":1,"message":"149","line":158,"column":37,"nodeType":"147","messageId":"148","endLine":165,"endColumn":39},{"ruleId":"145","severity":1,"message":"156","line":182,"column":45,"nodeType":"147","messageId":"148","endLine":186,"endColumn":47},{"ruleId":"145","severity":1,"message":"146","line":192,"column":37,"nodeType":"147","messageId":"148","endLine":193,"endColumn":66},{"ruleId":"145","severity":1,"message":"154","line":202,"column":37,"nodeType":"147","messageId":"148","endLine":205,"endColumn":39},{"ruleId":"157","severity":1,"message":"158","line":50,"column":13,"nodeType":"159","messageId":"160","endLine":52,"endColumn":15},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'CardTitle' is defined but never used.","Identifier","unusedVar","'outline' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'NavLink' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'AboutPage' is assigned a value but never used.","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-global-assign","no-unsafe-negation"]